echo "Loading common functions"

function mk-venv() {
    if [[ "$1" == "" ]]; then
	echo "Usage: mk-venv <environment-name>"
	return 1
    fi
    python3 -m venv ~/.virtualenvs/$1
}

function venv() {
    if [[ "$1" == "" ]]; then
	echo "Usage: venv <environment-name>"
	echo -n "Found: "
	for i in $(ls ~/.virtualenvs/); do
	    echo -n "$i "
	done
	echo ""
	return 1
    fi
    source ~/.virtualenvs/$1/bin/activate
}

function mcd(){
  if [ -z "$1" ]; then
   echo "Usage: mcd [directory name] to make and cd into it"
   exit 1
  fi
  mkdir $1 && cd $1
}

#extract a file checking multiple types
ex () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1                  ;;
            *.tar.gz)    tar xvzf $1                  ;;
            *.bz2)       bunzip2 $1                   ;;
            *.rar)       unrar x $1                   ;;
            *.gz)        gunzip $1                    ;;
            *.tar)       tar xvf $1                   ;;
            *.tbz2)      tar xvjf $1                  ;;
            *.tgz)       tar xvzf $1                  ;;
            *.zip)       unzip $1                     ;;
            *.Z)         uncompress $1                ;;
            *.7z)        7z x $1                      ;;
            *)           echo "can't extract '$1'..." ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}


# Outputs the current epoch time or converts argument to human-readable date and time
epoch() {
  if [ $# -eq 0 ]; then
    date
    date +%s
  else
    date -d @"$@" -R
  fi
}

# show description of a http status
function httpstatus() {
  if [ -z $1 ]; then
    w3m -dump -no-graph https://httpstatuses.com
  else
    w3m -dump -no-graph https://httpstatuses.com/$1 | sed -n '/-----/q;p' | grep -v httpstatuses.com | grep --color -E "$1|"
  fi
}

# Get colors in manual pages
function man() {
       env \
                LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
                LESS_TERMCAP_md="$(printf '\e[1;31m')" \
                LESS_TERMCAP_me="$(printf '\e[0m')" \
                LESS_TERMCAP_se="$(printf '\e[0m')" \
                LESS_TERMCAP_so="$(printf '\e[1;44;33m')" \
                LESS_TERMCAP_ue="$(printf '\e[0m')" \
                LESS_TERMCAP_us="$(printf '\e[1;32m')" \
                man "$@"
}